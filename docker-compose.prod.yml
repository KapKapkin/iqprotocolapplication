version: "3.10"

services:

  web:
    build:
      context: ./app
      dockerfile: dockerfile.prod
    command: sh -c "gunicorn --workers=4 --reload --max-requests=1000 --timeout 3600 iqprotocolapplication.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    ports:
      - "8000:8000"
    env_file:
      - ./.env.prod
    depends_on:
      - db
      - redis
  db:
    image: postgres:15.0-alpine
    env_file:
      - ./.env.prod.db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
  redis:
    image: redis:7.0.5-alpine
    ports:
      - "6379:6379"
  nginx:
    image: nginx:stable-alpine
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
      - ./nginx/prod/:/etc/nginx/conf.d/:ro
      - ./certbot/conf:/etc/letsencrypt/:ro
      - ./certbot/www:/var/www/certbot/:ro
    ports:
      - "80:80"
      - "443:443"
    links:
      - web
    depends_on:
      - web
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt/:rw
      - ./certbot/www:/var/www/certbot/:rw
    #command: certonly --webroot --webroot-path=/var/www/certbot/ --email oleg080505@gmail.com --agree-tos --no-eff-email -d olhudyakoff.ru -d www.olhudyakoff.ru
    depends_on:
      - nginx
volumes:
  postgres_data:
  static_volume:
  media_volume:


